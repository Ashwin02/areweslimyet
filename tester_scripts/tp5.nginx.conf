
#user  nobody;
worker_processes  1;

#daemon off;

error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';
    client_body_temp_path tmp/client_body;
    fastcgi_temp_path tmp/fastcgi_temp;
    uwsgi_temp_path tmp/uwsgi_temp;
    scgi_temp_path tmp/scgi_temp;
    proxy_temp_path tmp/proxy_temp;
    proxy_cache_path tmp/proxy_cache keys_zone=one:10m;
    #fastcgi_cache_path tmp/fastcgi_cache keys_zone=one:10m;
    #scgi_cache_path tmp/scgi_cache keys_zone=one:10m;
    #uwsgi_cache_path tmp/uwsgi_cache keys_zone=one:10m;

    access_log  logs/access.log;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        # The TP5 test uses a sequential port for all 100 pages to
        # force different compartments. This could instead be done
        # with dns hacks or something, but nginx has no issue with
        # doing this, so...
        listen 8001;
        listen 8002;
        listen 8003;
        listen 8004;
        listen 8005;
        listen 8006;
        listen 8007;
        listen 8008;
        listen 8009;
        listen 8010;
        listen 8011;
        listen 8012;
        listen 8013;
        listen 8014;
        listen 8015;
        listen 8016;
        listen 8017;
        listen 8018;
        listen 8019;
        listen 8020;
        listen 8021;
        listen 8022;
        listen 8023;
        listen 8024;
        listen 8025;
        listen 8026;
        listen 8027;
        listen 8028;
        listen 8029;
        listen 8030;
        listen 8031;
        listen 8032;
        listen 8033;
        listen 8034;
        listen 8035;
        listen 8036;
        listen 8037;
        listen 8038;
        listen 8039;
        listen 8040;
        listen 8041;
        listen 8042;
        listen 8043;
        listen 8044;
        listen 8045;
        listen 8046;
        listen 8047;
        listen 8048;
        listen 8049;
        listen 8050;
        listen 8051;
        listen 8052;
        listen 8053;
        listen 8054;
        listen 8055;
        listen 8056;
        listen 8057;
        listen 8058;
        listen 8059;
        listen 8060;
        listen 8061;
        listen 8062;
        listen 8063;
        listen 8064;
        listen 8065;
        listen 8066;
        listen 8067;
        listen 8068;
        listen 8069;
        listen 8070;
        listen 8071;
        listen 8072;
        listen 8073;
        listen 8074;
        listen 8075;
        listen 8076;
        listen 8077;
        listen 8078;
        listen 8079;
        listen 8080;
        listen 8081;
        listen 8082;
        listen 8083;
        listen 8084;
        listen 8085;
        listen 8086;
        listen 8087;
        listen 8088;
        listen 8089;
        listen 8090;
        listen 8091;
        listen 8092;
        listen 8093;
        listen 8094;
        listen 8095;
        listen 8096;
        listen 8097;
        listen 8098;
        listen 8099;
        listen 8100;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
